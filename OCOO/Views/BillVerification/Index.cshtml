@model OCOO.Models.MeasurementAcceptance

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_FirmLayout.cshtml";
}


<style>
    .table-responsive {
        height: calc(100vh - 260px);
        overflow: auto;
    }

    table {
        border-collapse: unset !important;
    }

        table thead {
            position: sticky;
            top: 0;
            z-index: 10;
        }

    .table th, .table thead th {
        color: #fff;
        vertical-align: middle;
        background: #21aee4 !important;
        border: 1px solid #1b9aca;
        text-align: center;
        padding: 5px 10px;
    }

    .table td {
        padding: 10px 10px;
        vertical-align: middle;
        text-align: right;
    }
</style>


<div class="page-wrapper">
    <div class="row page-titles">
        <div class="col-md-4 align-self-center">
            <h3 class="text-themecolor">Measurement Acceptance</h3>
        </div>
        <div class="col-md-8 align-self-right">
            <a href="/FirmReport/PendingBillReport" class="btn btn-sm  btn-xs btn-warning ml-2 float-right"><i class="fa fa-arrow-left"></i> Back</a>

        </div>
    </div>
    <div class="container-fluid">
        <div class="card">
            <div class="card-body p-3">
                <input asp-for="Pk_BillingId" type="hidden" />
                <form>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group ">
                                    <label>STP <span class="text-danger">*</span> </label>
                                    @Html.DropDownListFor(m => m.Fk_STPId, new SelectList(ViewBag.ddlSTP, "Value", "Text"), new { @class = "form-control",@onchange="return fbindTable()" })

                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Measurement Acceptance<span class="text-danger">*</span></label>
                                    @Html.DropDownListFor(m => m.Fk_StatusId, new SelectList(ViewBag.ddlStatus, "Value", "Text"), new { @class = "form-control",@onchange="FhideShow()" })


                                </div>
                            </div>
                            <div class="col-md-6 ">
                                <div class="form-group">
                                    <label>Document</label>
                                    <input onchange="return fvalidateDoc(this);fvalidateTPIReport(this)" type="file" id="fileDocument" class="form-control" />
                                    <b class="text-danger">Please Upload only JPG,JPEG,PNG,PDF and file size only 1MB Allow !</b>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Remark <span class="text-danger" id="spnRemark"></span></label>

                                    <textarea asp-for="Remark" class="form-control">

                                    </textarea>

                                </div>
                            </div>
                            <div class="col-md-12 ">
                                <div class="form-group">
                                    <input type="checkbox" id="Verifymd_checkbox_34" class="filled-in chk-col-amber" />
                                    <label style="font-size:12px;padding-top:3px;" for="Verifymd_checkbox_34">It is hereby declared that the details mentioned here/above are true and correct.</label>
                                </div>


                            </div>

                            <div class="col-md-12 text-right">

                                <a href="javascript:void(0)" onclick="return fClearMeasurement()" class="btn btn-secondary   btn-xs btn-sm"><i class="fa fa-refresh"></i>Reset</a>


                                <button onclick="return ValidateForm();" class="btn btn-success btn-sm btn-xs" id="Submit" value="Submit" name="btnSubmit"><i class="fa fa-save"></i> Submit</button>


                            </div>
                        </div>
                    </div>
                </form>

            </div>
        </div>

        <div class="card">
            <div class="card-body p-3">


                <div class="table-responsive" id="data-table">
                    <table class="table table-striped table-bordered" cellspacing="0" cellpadding="0" id="dtList" border="0">
                        <thead>
                            <tr id="trHeaderText">
                                <th colspan="31" style="font-size:20px;"><span id="spnHeaderText"></span></th>
                            </tr>
                            <tr>
                                <th>0</th>
                                <th>1</th>
                                <th>2</th>
                                <th>3</th>
                                <th>4</th>
                                <th>5</th>
                                <th>6</th>
                                <th>7</th>
                                <th>8</th>
                                <th>9</th>
                                <th>10</th>
                                <th>11</th>
                                <th>12</th>
                                <th>13</th>
                                <th>14</th>
                                <th>15</th>
                                <th>16</th>
                                <th>17</th>
                                <th>18</th>
                                <th>19</th>
                                <th>20</th>
                                <th>21</th>
                                <th>22</th>
                                <th>23</th>
                                <th>24</th>
                                <th>25</th>
                                <th>26</th>
                                <th>27</th>
                                <th>28</th>
                                <th>29</th>
                                <th>30</th>
                            </tr>
                            <tr>
                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                                <th colspan="3">Flow (MLD)</th>
                                <th colspan="3">Fix Charges (60%)</th>
                                <th colspan="14">Variable Cost (40%)</th>
                                @* <th colspan="12"></th>*@
                                <th colspan="4">Complaints</th>
                                <th colspan="4"></th>
                            </tr>
                            <tr>
                                <th rowspan="2">SL No</th>
                                <th rowspan="2">Date</th>
                                <th rowspan="2">STP</th>
                                <th rowspan="2">Amount Of STP</th>
                                <th rowspan="2">Capacity</th>
                                <th rowspan="2">Actual<br /> Achieved</th>
                                <th rowspan="2">Treated for<br /> &nbsp;Payment</th>
                                <th rowspan="2">As Per CB</th>
                                <th rowspan="2">As Per Actual</th>
                                <th rowspan="2">LD As Per CB</th>
                                <th rowspan="2">AS Per CB</th>
                                <th rowspan="2">As Per Actual</th>

                                <th style="text-align: center;" colspan="3">BOD</th>
                                <th style="text-align: center;" colspan="3">COD</th>
                                <th style="text-align: center;" colspan="3">TSS</th>
                                <th style="width: 227px; text-align: center;" colspan="3">FC</th>
                                <th rowspan="2">Received</th>
                                <th rowspan="2">Resolved</th>
                                <th rowspan="2">LD</th>
                                <th rowspan="2">Verified amount <br /> (13+16+19+22)</th>
                                <th rowspan="2">LD</th>
                                <th rowspan="2">Total Amount <br /> (8+27)</th>
                                <th rowspan="2">Testing Agency</th>
                                @* <th rowspan="2">Action</th> *@

                            </tr>
                            <tr>
                                <th>Reported Value</th>
                                <th>BOD (50%)</th>
                                <th>LD</th>
                                <th>Reported Value</th>
                                <th>COD (15%)</th>
                                <th>LD</th>
                                <th>Reported Value</th>
                                <th>TSS (25%)</th>
                                <th>LD</th>
                                <th>Reported Value</th>
                                <th>FC (10%)</th>
                                <th>LD</th>
                            </tr>
                        </thead>

                        <tbody>
                        </tbody>
                    </table>
                </div>

            </div>
        </div>
    </div>

</div>
@{
    Html.RenderPartial("_GetTestingAgency");
}
<script src="~/script/showtestingagency.js"></script>
<script>
    $(document).ready(function () {
        fStpBindDropDown();
        fClearMeasurement();
    })
    function fbindTable() {
        var FK_BillId=$("#Pk_BillingId").val();
        $.ajax({
            url: '/BillVerification/ViewInvoiceDetail', // Replace with your server endpoint
            type: 'Post', // or 'POST' depending on your server implementation
            data: { Pk_BillingId: FK_BillId, Fk_STPId: $("#Fk_STPId").val() }, // Change to the appropriate data type
            success: function (response) {
                
                let str = "";


                if (response != null) {

                    let srno = 1;
                    if (response.length > 0) {

                        $("#dtList tbody").html('');
                        $("#spnHeaderText").text(response[0].headerText);
                        //$("#trHeaderText").css({"display":"block"});
                        
                        for (let i = 0; i < response.length; i++) {

                            str += "<tr>";
                            str += "<td>" + srno + "</td>";
                            str += "<td>" + response[i].billingDate + "</td>";
                            str += "<td>" + response[i].stpName + "</td>";
                            str += "<td>" + response[i].amountOfMLDSTP + "</td>";
                            str += "<td>" + response[i].capacity + "</td>";
                            if (response[i].isFlowUpdated == 'Y') {
                                str += "<td class=" + response[i].updatedColor + ">" + response[i].waterdischarge;
                                str += "<span class='badge badge-info'>" + response[i].flowUpdatedDate + "</span>";
                                str += "<span class='badge badge-success'>" + response[i].flowUpdatedBy + "</span>";
                                str + "</td>";
                            }
                            else if (response[i].isFlowLD == 'True') {
                                str += "<td class='measurementcolor'>" + response[i].waterdischarge + "</td>";
                            }
                            else {
                                str += "<td>" + response[i].waterdischarge + "</td>";
                            }

                            str += "<td>" + response[i].treated_for_Payement + "</td>";
                            str += "<td>" + response[i].asPerCBFixCharges_60 + "</td>";
                            str += "<td>" + response[i].asPerActual_FixCharges_60 + "</td>";
                            if (response[i].isFlowLD == "True") {
                                str += "<td class='measurementcolor'>"+response[i].flowLDAmount +"</td>";

                            }
                            else {
                                str += "<td>" + response[i].flowLDAmount + "</td>";
                              
                            }

                            str += "<td>" + response[i].asPerCBFixCharges_40 + "</td>";
                            str += "<td>" + response[i].asPerActual_FixCharges_40 + "</td>";

                            if (response[i].isBODUpdated == 'Y') {
                                str += "<td class=" + response[i].updatedColor + ">" + response[i].bodReportedValue;
                                str += "<span class='badge badge-info'>" + response[i].bodUpdatedDate + "</span>";
                                str += "<span class='badge badge-success'>" + response[i].bodUpdatedBy + "</span>";
                                str + "</td>";
                                str += "<td class=" + response[i].updatedColor + ">" + response[i].bodAmount + "</td>";
                                str += "<td class=" + response[i].updatedColor + ">" + response[i].bodldAmount + "</td>";
                            }

                            else if (response[i].isBODLD == 'True') {
                                str += "<td class='measurementcolor'>" + response[i].bodReportedValue + "</td>";
                                str += "<td class='measurementcolor'>" + response[i].bodAmount + "</td>";
                                str += "<td class='measurementcolor'>" + response[i].bodldAmount + "</td>";
                            }
                            else {
                                str += "<td>" + response[i].bodReportedValue + "</td>";
                                str += "<td>" + response[i].bodAmount + "</td>";
                                str += "<td>" + response[i].bodldAmount + "</td>";
                            }

                            if (response[i].isCODUpdated == 'Y') {
                                str += "<td class=" + response[i].updatedColor + ">" + response[i].codReportedValue;
                                str += "<span class='badge badge-info'>" + response[i].codUpdatedDate + "</span>";
                                str += "<span class='badge badge-success'>" + response[i].codUpdatedBy + "</span>";
                                str + "</td>";
                                str += "<td class=" + response[i].updatedColor + ">" + response[i].codAmount + "</td>";
                                str += "<td class=" + response[i].updatedColor + ">" + response[i].codldAmount + "</td>";
                            }
                            else if (response[i].isCODLD == 'True') {
                                str += "<td class='measurementcolor'>" + response[i].codReportedValue + "</td>";
                                str += "<td class='measurementcolor'>" + response[i].codAmount + "</td>";
                                str += "<td class='measurementcolor'>" + response[i].codldAmount + "</td>";
                            }
                            else {
                                str += "<td>" + response[i].codReportedValue + "</td>";
                                str += "<td>" + response[i].codAmount + "</td>";
                                str += "<td>" + response[i].codldAmount + "</td>";
                            }

                            if (response[i].isTSSUpdated == 'Y') {
                                str += "<td class=" + response[i].updatedColor + ">" + response[i].tssReportedValue;
                                str += "<span class='badge badge-info'>" + response[i].tssUpdatedDate + "</span>";
                                str += "<span class='badge badge-success'>" + response[i].tssUpdatedBy + "</span>";
                                str + "</td>";
                                str += "<td class=" + response[i].updatedColor + ">" + response[i].tssAmount + "</td>";
                                str += "<td class=" + response[i].updatedColor + ">" + response[i].tssldAmount + "</td>";
                            }
                            else if (response[i].isTSSLD == 'True') {
                                str += "<td class='measurementcolor'>" + response[i].tssReportedValue + "</td>";
                                str += "<td class='measurementcolor'>" + response[i].tssAmount + "</td>";
                                str += "<td class='measurementcolor'>" + response[i].tssldAmount + "</td>";
                            }
                            else {
                                str += "<td>" + response[i].tssReportedValue + "</td>";
                                str += "<td>" + response[i].tssAmount + "</td>";
                                str += "<td>" + response[i].tssldAmount + "</td>";
                            }

                            if (response[i].isFCUpdated == 'Y') {
                                str += "<td class=" + response[i].updatedColor + ">" + response[i].fcReportedValue;
                                str += "<span class='badge badge-info'>" + response[i].fcUpdatedDate + "</span>";
                                str += "<span class='badge badge-success'>" + response[i].fcUpdatedBy + "</span>";
                                str + "</td>";
                                str += "<td class=" + response[i].updatedColor + ">" + response[i].fcAmount + "</td>";
                                str += "<td class=" + response[i].updatedColor + ">" + response[i].fcldAmount + "</td>";
                            }
                            else if (response[i].isFCLD == 'True') {
                                str += "<td class='measurementcolor'>" + response[i].fcReportedValue + "</td>";
                                str += "<td class='measurementcolor'>" + response[i].fcAmount + "</td>";
                                str += "<td class='measurementcolor'>" + response[i].fcldAmount + "</td>";
                            }
                            else {
                                str += "<td>" + response[i].fcReportedValue + "</td>";
                                str += "<td>" + response[i].fcAmount + "</td>";
                                str += "<td>" + response[i].fcldAmount + "</td>";
                            }

                            str += "<td>" + response[i].complaintReceived + "</td>";
                            str += "<td>" + response[i].complaintResolved + "</td>";
                            if (response[i].isCRUpdated == "Y") {
                                str += "<td class=" + response[i].updatedColor + ">" + response[i].complaintLDAmount;
                                str += "<span class='badge badge-info'>" + response[i].crUpdatedBy + "</span>";
                                str + "</td>";

                            }
                            else {
                                str += "<td>" + response[i].complaintLDAmount + "</td>";
                            }

                            str += "<td>" + response[i].totalVerifiedAmount + "</td>";
                            str += "<td>" + response[i].totalLDAmount + "</td>";
                            str += "<td>" + response[i].totalBillAmount + "</td>";
                            str += "<td class='text-center'> <a href='javascript:void(0)' onclick='return fViewDetails(" + response[i].pk_BillingId + ")'><span class='badge badge-warning test-a'>" + response[i].testingAgency + " <span class='badge-2 " + response[i].testingCountColor + "  '>" + response[i].testingCount + "</span></span></a></td>";

                            str += "</tr>";

                            srno++;
                        }

                    }
                    else {
                        $("#spnHeaderText").text("");
                        str += "<tr>  <td colspan='31' class='alert alert-warning text-center'> No Record Found </td> </tr>";
                    }
                }

                else {
                    $("#spnHeaderText").text("");
                    str += "<tr>  <td colspan='31' class='alert alert-warning text-center'> No Record Found </td> </tr>";
                }
                $("#dtList tbody").html(str);

            },
            error: function (error) {
                
                fShowToasterror(error);
            }
        });
    }

    function ValidateForm() {
        
        var isvalid = true;
       
        if ($("#Fk_STPId").val() == null || $("#Fk_STPId").val() == '0') {
            $("#Fk_STPId").focus();
            isvalid = false;
        }

        else if ($("#Fk_StatusId").val() == '0') {
            $("#Fk_StatusId").focus();
            isvalid = false;
        }
        else if ($("#Fk_StatusId").val() == "2") {
            if ($("#Remark").val() == null || $("#Remark").val() == '') {
                $("#Remark").focus();
                isvalid = false;
            }
        }

        if (isvalid == true) {
            var rowCount = $('#dtList >tbody >tr').length
            var Verifymd_checkbox_34 = $("#Verifymd_checkbox_34").prop("checked")
            if (Verifymd_checkbox_34 == false) {
                fShowToastalert("Please select declaration box.");
                return false;
            }
            else if (parseInt(rowCount) <=0 ) {
                $("#Fk_STPId").focus();
                fShowToastalert("Uploaded measurement not found");
                return false;
            }
            else{

                var input = $("#fileDocument").prop("files")[0];
                var Remark = $("#Remark").val();
                var Fk_STPId = $("#Fk_STPId").val();
                var Fk_StatusId = $("#Fk_StatusId").val();
                var Pk_BillingId = $("#Pk_BillingId").val()

                var formData = new FormData();


                formData.append("Remark", Remark);
                formData.append("Documents", input);
                formData.append("Fk_StatusId", Fk_StatusId);
                formData.append("Fk_STPId", Fk_STPId);
                formData.append("Pk_BillingId", Pk_BillingId);

                $.ajax({
                    url: '/BillVerification/FinalSubmit',
                    data: formData,
                    processData: false,
                    contentType: false,
                    type: 'POST',
                    success: function (response) {
                        debugger
                        if (response.flag === "1") {
                            fShowToast(response.msg)
                            fClearMeasurement();
                            // window.location.reload(true)
                        }
                        else {
                            fShowToasterror(response.msg)
                        }
                    },
                    error: function () {
                        debugger
                        fShowToasterror('Something wrong');
                    }
                });

            }

        }

    }
    function FhideShow() {


        if ($("#Fk_StatusId").val() == "2") {

            $("#Remark").val("");
            $("#spnRemark").text('*');
        }
        else {
            $("#spnRemark").text('');
        }


    }

    function fStpBindDropDown() {
        

        let txtPk_BillingId = $("#Pk_BillingId").val();
        $.ajax({
            url: '/BillVerification/GetSTPDDl',
            type: 'GET',
            data: { Id: txtPk_BillingId },
            success: function (response) {
                if (response != null) {
                    ;
                    //console.log(response);
                    $("#Fk_STPId").html('');
                    let dd = '';
                    for (let i = 0; i < response.length; i++) {
                        dd += '<option value="' + response[i].value + '">' + response[i].text + '</option>';
                    }
                    // console.log(dd)
                    $("#Fk_STPId").html(dd);
                }
            },
            error: function (error) {
                fShowToasterror(error);
            }
        })

    }
    function fvalidateDoc(input) {
        //

        var files = input.files;
        var validExtensions = ['jpg', 'jpeg', 'png', 'pdf']; // Allowed extensions
        var maxSizeInBytes = 1024 * 1024; // 1MB in bytes

        for (var i = 0; i < files.length; i++) {
            var file = files[i];
            var fileSize = file.size;
            var fileName = file.name;
            var fileExtension = fileName.split('.').pop().toLowerCase();

            if (fileSize > maxSizeInBytes) {
                fShowToastalert('File ' + fileName + ' exceeds 1MB. Please select a smaller file.');
                input.value = ''; // Clear the input to remove invalid files
                $("#fileDocument").val('');
                $("#fileDocument").focus();
                return false;
            }

            if (!validExtensions.includes(fileExtension)) {
                fShowToastalert('File ' + fileName + ' has an invalid extension. Please select a valid file (jpg, jpeg, png, pdf)!');
                input.value = ''; // Clear the input to remove invalid files
                $("#fileDocument").val('');
                $("#fileDocument").focus();
                return false;
            }

        }
    }
    //function fVerifyCheck() {

    //    if ($("#Verifymd_checkbox_34").prop('checked') == true) {

    //        $("#txtIsverification").val(1);
    //    }
    //    else {
    //        $("#txtIsverification").val(0);
    //    }

    //}
    function fClearMeasurement() {
        $("#fileDocument").val("");
        $("#Remark").val("");
        $("#Fk_STPId").val("0");
        $("#Fk_StatusId").val("0");
        $("#Verifymd_checkbox_34").prop('checked', false)
        fStpBindDropDown();
        $('#myTableId tbody').empty();
        $("#spnHeaderText").text("");
        var str = "<tr>  <td colspan='31' class='alert alert-warning text-center'> No Record Found </td> </tr>";
        $("#dtList tbody").html(str);
    }

</script>