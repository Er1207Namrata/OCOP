@model OCOO.Models.InvoiceDetails
@{
    ViewData["Title"] = "View Bill Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    ViewBag.Text = @Html.ActionLink("Back", "InvoiceDetails", "AdminReport");
}

<style>
    .table-responsive {
        height: calc(100vh - 260px);
        overflow: auto;
    }

    table thead {
        position: sticky;
        top: 0;
        z-index: 10;
    }

    table {
        border-collapse: unset !important;
    }

    .table th, .table thead th {
        color: #fff;
        vertical-align: middle;
        background: #21aee4 !important;
        border: 1px solid #1b9aca;
        text-align: center;
        padding: 5px 10px;
    }

    .table td {
        padding: 10px 10px;
        vertical-align: middle;
        text-align: right;
    }
</style>


<div class="page-wrapper">
    <div class="row page-titles">
        <div class="col-md-4 align-self-center">
            <h3 class="text-themecolor">View Billing Report</h3>
        </div>
        <div class="col-md-8 align-self-right">
            <a href="@ViewBag.Data" class="btn btn-sm  btn-xs btn-warning ml-2 float-right"><i class="fa fa-arrow-left"></i> Back</a>
            <button id="export-excel" class="btn btn-sm btn-xs btn-success float-right" title="Export to excel"><i class="fa fa-file-excel-o" aria-hidden="true"></i></button>
        </div>
    </div>
    <div class="container-fluid">
        <div class="card mb-0">
            <div class="card-body p-3">
                <div class="table-responsive" id="data-table">
                    <table class="table table-striped table-bordered" cellspacing="0" cellpadding="0" border="0">
                        <thead>
                            <tr>
                                @if (Model.dtDetails != null)
                                {
                                    <th colspan="34" style="font-size:20px;"><span>@Model.dtDetails.Rows[0]["HeaderText"].ToString()</span></th>
                                }
                            </tr>
                            <tr>
                                <th>0</th>
                                <th>1</th>
                                <th>2</th>
                                <th>3</th>
                                <th>4</th>
                                <th>5</th>
                                <th>6</th>
                                <th>7</th>
                                <th>8</th>
                                <th>9</th>
                                <th>10</th>
                                <th>11</th>
                                <th>12</th>
                                <th>13</th>
                                <th>14</th>
                                <th>15</th>
                                <th>16</th>
                                <th>17</th>
                                <th>18</th>
                                <th>19</th>
                                <th>20</th>
                                <th>21</th>
                                <th>22</th>
                                <th>23</th>
                                <th>24</th>
                                <th>25</th>
                                <th>26</th>
                                <th>27</th>
                                <th>28</th>
                                <th>29</th>
                                <th>30</th>
                                <th>31</th>
                                <th>32</th>
                                <th>33</th>
                            </tr>
                            <tr>
                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                                <th>&nbsp;</th>
                                <th colspan="4">Flow (MLD)</th>
                                <th colspan="3">Fix Charges (60%)</th>
                                <th colspan="15">Variable Cost (40%)</th>
                                @* <th colspan="12"></th>*@
                                <th colspan="4">Complaints</th>
                                <th colspan="4"></th>
                            </tr>
                            <tr>
                                <th rowspan="2">SL No</th>
                                <th rowspan="2">Date</th>
                                <th rowspan="2">STP</th>
                                <th rowspan="2">Amount Of STP</th>
                                <th rowspan="2">Capacity</th>
                                <th rowspan="2">Actual<br /> Achieved</th>
                                <th rowspan="2">Treated for<br /> &nbsp;Payment</th>
                                <th rowspan="2">Withheld Amount</th>
                                <th rowspan="2">As Per CB</th>
                                <th rowspan="2">As Per Actual</th>
                                <th rowspan="2">LD As Per CB</th>
                                <th rowspan="2">AS Per CB</th>
                                <th rowspan="2">As Per Actual</th>

                                <th style="text-align: center;" colspan="3">BOD</th>
                                <th style="text-align: center;" colspan="3">COD</th>
                                <th style="text-align: center;" colspan="3">TSS</th>
                                <th style="width: 227px; text-align: center;" colspan="3">FC</th>
                                <th rowspan="2">Withheld Amount</th>
                                <th rowspan="2">Received</th>
                                <th rowspan="2">Resolved</th>
                                <th rowspan="2">LD</th>
                                <th rowspan="2">Withheld Amount</th>
                                <th rowspan="2">Verified amount <br /> (14+17+20+23)</th>
                                <th rowspan="2">LD</th>
                                <th rowspan="2">Total Amount <br /> (9+30)</th>
                                <th rowspan="2">Testing Agency</th>
                            </tr>
                            <tr>
                                <th>Reported Value</th>
                                <th>BOD (50%)</th>
                                <th>LD</th>
                                <th>Reported Value</th>
                                <th>COD (15%)</th>
                                <th>LD</th>
                                <th>Reported Value</th>
                                <th>TSS (25%)</th>
                                <th>LD</th>
                                <th>Reported Value</th>
                                <th>FC (10%)</th>
                                <th>LD</th>
                            </tr>
                        </thead>

                        <tbody>
                            @if (Model != null)
                            {
                                if (Model.dtDetails != null && Model.dtDetails.Rows.Count > 0)
                                {

                                    for (int i = 0; i < Model.dtDetails.Rows.Count; i++)
                                    {
                                        <tr class="@(Model.dtDetails.Rows[i]["IsSame"].ToString() == "True" ? "measurementwarning" : "")">
                                            <td>@(i + 1)</td>
                                            <td>@Model.dtDetails.Rows[i]["Dates"].ToString()</td>
                                            <td>@Model.dtDetails.Rows[i]["StpName"].ToString()</td>
                                            <td>@Model.dtDetails.Rows[i]["AmountOfMLDSTP"].ToString()</td>
                                            <td>@Model.dtDetails.Rows[i]["Capacity"].ToString()</td>
                                            @if (@Model.dtDetails.Rows[i]["IsFlowUpdated"].ToString() == "Y")
                                            {
                                                <td class="@Model.dtDetails.Rows[i]["UpdatedColor"].ToString()">
                                                    @Model.dtDetails.Rows[i]["Waterdischarge"].ToString()<br />
                                                    <span class="badge badge-info">@Model.dtDetails.Rows[i]["FlowUpdatedDate"].ToString()</span><br />
                                                    <span class="badge badge-success">@Model.dtDetails.Rows[i]["FlowUpdatedBy"].ToString()</span>
                                                </td>
                                            }
                                            else
                                            {
                                                if (@Model.dtDetails.Rows[i]["IsFlowLD"].ToString() == "True")
                                                {
                                                    <td class="measurementcolor">@Model.dtDetails.Rows[i]["Waterdischarge"].ToString()</td>
                                                }
                                                else
                                                {
                                                    <td>@Model.dtDetails.Rows[i]["Waterdischarge"].ToString()</td>
                                                }
                                            }
                                            <td>@Model.dtDetails.Rows[i]["Treated_for_Payement"].ToString()</td>
                                            <td>@Model.dtDetails.Rows[i]["WaterDischargeWithheldAmount"].ToString()</td>
                                            <td>@Model.dtDetails.Rows[i]["AsPerCBFixCharges_60"].ToString()</td>
                                            <td>@Model.dtDetails.Rows[i]["AsPerActual_FixCharges_60"].ToString()</td>

                                            @if (@Convert.ToDecimal(@Model.dtDetails.Rows[i]["IsFlowLD"]) > 0)
                                            {
                                                <td class="measurementcolor">
                                                    @Model.dtDetails.Rows[i]["FlowLDAmount"].ToString()
                                                </td>

                                            }
                                            else
                                            {
                                                <td>@Model.dtDetails.Rows[i]["FlowLDAmount"].ToString()</td>
                                            }

                                            <td>@Model.dtDetails.Rows[i]["AsPerCBFixCharges_40"].ToString()</td>
                                            <td>@Model.dtDetails.Rows[i]["AsPerActual_FixCharges_40"].ToString()</td>


                                            @if (@Model.dtDetails.Rows[i]["IsBODUpdated"].ToString() == "Y")
                                            {
                                                <td class="@Model.dtDetails.Rows[i]["UpdatedColor"].ToString()">
                                                    @Model.dtDetails.Rows[i]["BODReportedValue"].ToString()<br />
                                                    <span class="badge badge-info">@Model.dtDetails.Rows[i]["BODUpdatedDate"].ToString()</span><br />
                                                    <span class="badge badge-success">@Model.dtDetails.Rows[i]["BODUpdatedBy"].ToString()</span>
                                                </td>
                                                <td class="@Model.dtDetails.Rows[i]["UpdatedColor"].ToString()">@Model.dtDetails.Rows[i]["BODAmount"].ToString()</td>
                                                <td class="@Model.dtDetails.Rows[i]["UpdatedColor"].ToString()">@Model.dtDetails.Rows[i]["BODLDAmount"].ToString()</td>
                                            }
                                            else if (@Model.dtDetails.Rows[i]["IsBODLD"].ToString() == "True")
                                            {
                                                <td class="measurementcolor">
                                                    @Model.dtDetails.Rows[i]["BODReportedValue"].ToString()
                                                </td>
                                                <td class="measurementcolor">@Model.dtDetails.Rows[i]["BODAmount"].ToString()</td>
                                                <td class="measurementcolor">@Model.dtDetails.Rows[i]["BODLDAmount"].ToString()</td>
                                            }
                                            else
                                            {
                                                <td>@Model.dtDetails.Rows[i]["BODReportedValue"].ToString()</td>
                                                <td>@Model.dtDetails.Rows[i]["BODAmount"].ToString()</td>
                                                <td>@Model.dtDetails.Rows[i]["BODLDAmount"].ToString()</td>

                                            }
                                            @if (@Model.dtDetails.Rows[i]["IsCODUpdated"].ToString() == "Y")
                                            {
                                                <td class="@Model.dtDetails.Rows[i]["UpdatedColor"].ToString()">
                                                    @Model.dtDetails.Rows[i]["CODReportedValue"].ToString()<br />
                                                    <span class="badge badge-info">@Model.dtDetails.Rows[i]["CODUpdatedDate"].ToString()</span><br />
                                                    <span class="badge badge-success">@Model.dtDetails.Rows[i]["CODUpdatedBy"].ToString()</span>
                                                </td>
                                                <td class="@Model.dtDetails.Rows[i]["UpdatedColor"].ToString()">@Model.dtDetails.Rows[i]["CODAmount"].ToString()</td>
                                                <td class="@Model.dtDetails.Rows[i]["UpdatedColor"].ToString()">@Model.dtDetails.Rows[i]["CODLDAmount"].ToString()</td>
                                            }
                                            else if (@Model.dtDetails.Rows[i]["IsCODLD"].ToString() == "True")
                                            {
                                                <td class="measurementcolor">@Model.dtDetails.Rows[i]["CODReportedValue"].ToString()</td>
                                                <td class="measurementcolor">@Model.dtDetails.Rows[i]["CODAmount"].ToString()</td>
                                                <td class="measurementcolor">@Model.dtDetails.Rows[i]["CODLDAmount"].ToString()</td>

                                            }
                                            else
                                            {
                                                <td>@Model.dtDetails.Rows[i]["CODReportedValue"].ToString()</td>
                                                <td>@Model.dtDetails.Rows[i]["CODAmount"].ToString()</td>
                                                <td>@Model.dtDetails.Rows[i]["CODLDAmount"].ToString()</td>
                                            }

                                            @if (@Model.dtDetails.Rows[i]["IsTSSUpdated"].ToString() == "Y")
                                            {
                                                <td class="@Model.dtDetails.Rows[i]["UpdatedColor"].ToString()">
                                                    @Model.dtDetails.Rows[i]["TSSReportedValue"].ToString()<br />
                                                    <span class="badge badge-info">@Model.dtDetails.Rows[i]["TSSUpdatedDate"].ToString()</span><br />
                                                    <span class="badge badge-success">@Model.dtDetails.Rows[i]["TSSUpdatedBy"].ToString()</span>
                                                </td>
                                                <td class="@Model.dtDetails.Rows[i]["UpdatedColor"].ToString()">@Model.dtDetails.Rows[i]["TSSAmount"].ToString()</td>
                                                <td class="@Model.dtDetails.Rows[i]["UpdatedColor"].ToString()">@Model.dtDetails.Rows[i]["TSSLDAmount"].ToString()</td>
                                            }
                                            else if (@Model.dtDetails.Rows[i]["IsTSSLD"].ToString() == "True")
                                            {
                                                <td class="measurementcolor">@Model.dtDetails.Rows[i]["TSSReportedValue"].ToString()</td>
                                                <td class="measurementcolor">@Model.dtDetails.Rows[i]["TSSAmount"].ToString()</td>
                                                <td class="measurementcolor">@Model.dtDetails.Rows[i]["TSSLDAmount"].ToString()</td>
                                            }

                                            else
                                            {
                                                <td>@Model.dtDetails.Rows[i]["TSSReportedValue"].ToString()</td>
                                                <td>@Model.dtDetails.Rows[i]["TSSAmount"].ToString()</td>
                                                <td>@Model.dtDetails.Rows[i]["TSSLDAmount"].ToString()</td>
                                            }

                                            @if (@Model.dtDetails.Rows[i]["IsFCUpdated"].ToString() == "Y")
                                            {
                                                <td class="@Model.dtDetails.Rows[i]["UpdatedColor"].ToString()">
                                                    @Model.dtDetails.Rows[i]["FCReportedValue"].ToString()<br />
                                                    <span class="badge badge-info">@Model.dtDetails.Rows[i]["FCUpdatedDate"].ToString()</span><br />
                                                    <span class="badge badge-success">@Model.dtDetails.Rows[i]["FCUpdatedBy"].ToString()</span>
                                                </td>
                                                <td class="@Model.dtDetails.Rows[i]["UpdatedColor"].ToString()">@Model.dtDetails.Rows[i]["FCAmount"].ToString()</td>
                                                <td class="@Model.dtDetails.Rows[i]["UpdatedColor"].ToString()">@Model.dtDetails.Rows[i]["FCLDAmount"].ToString()</td>
                                            }
                                            else if (@Model.dtDetails.Rows[i]["IsFCLD"].ToString() == "True")
                                            {
                                                <td class="measurementcolor">@Model.dtDetails.Rows[i]["FCReportedValue"].ToString()</td>
                                                <td class="measurementcolor">@Model.dtDetails.Rows[i]["FCAmount"].ToString()</td>
                                                <td class="measurementcolor">@Model.dtDetails.Rows[i]["FCLDAmount"].ToString()</td>

                                            }
                                            else
                                            {
                                                <td>@Model.dtDetails.Rows[i]["FCReportedValue"].ToString()</td>
                                                <td>@Model.dtDetails.Rows[i]["FCAmount"].ToString()</td>
                                                <td>@Model.dtDetails.Rows[i]["FCLDAmount"].ToString()</td>
                                            }
                                            <td>@Model.dtDetails.Rows[i]["BODCODTSSFCWithheldAmount"].ToString()</td>
                                            <td>@Model.dtDetails.Rows[i]["ComplaintReceived"].ToString()</td>
                                            <td>@Model.dtDetails.Rows[i]["ComplaintResolved"].ToString()</td>
                                            @if (@Model.dtDetails.Rows[i]["IsCRUpdated"].ToString() == "Y")
                                            {
                                                <td class="@Model.dtDetails.Rows[i]["UpdatedColor"].ToString()">
                                                    @Model.dtDetails.Rows[i]["ComplaintLDAmount"].ToString()
                                                    <br />
                                                    <span class="badge badge-info">@Model.dtDetails.Rows[i]["CRUpdatedDate"].ToString()</span><br />
                                                    <span class="badge badge-success">@Model.dtDetails.Rows[i]["CRUpdatedBy"].ToString()</span>
                                                </td>
                                            }
                                            else
                                            {
                                                <td>@Model.dtDetails.Rows[i]["ComplaintLDAmount"].ToString()</td>
                                            }
                                            <td>@Model.dtDetails.Rows[i]["ComplaintWithheldAmount"].ToString()</td>
                                            <td>@Model.dtDetails.Rows[i]["TotalVerifiedAmount"].ToString()</td>
                                            <td>@Model.dtDetails.Rows[i]["TotalLDAmount"].ToString()</td>
                                            <td>@Model.dtDetails.Rows[i]["TotalBillAmount"].ToString()</td>
                                            <td class="text-center">
                                                <a href="#" onclick="return fViewDetails(@Model.dtDetails.Rows[i]["Pk_BillingId"].ToString())">
                                                    <span class="badge badge-warning test-a">
                                                        @Model.dtDetails.Rows[i]["TestingAgency"].ToString()
                                                        <span class="badge-2 @Model.dtDetails.Rows[i]["TestingCountColor"].ToString()">@Model.dtDetails.Rows[i]["TestingCount"].ToString()</span>
                                                    </span>


                                                </a>
                                            </td>
                                        </tr>
                                    }

                                }
                                else
                                {
                                    <tr>
                                        <td colspan="34" class="alert alert-warning text-center">No Record Found</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
@{
    Html.RenderPartial("_GetTestingAgency");
}
<script src="~/script/showtestingagency.js"></script>
<script>

    $('#btnpdf').click(function () {
        ;
        var col = [0]; // coloms to remove

        var tbl = $('#tblInvoice').clone();
        //var rowCount = $("#tblInvoice tbody tr").length;
        var tablenew = tbl.get(0);
        //console.log(tbl);
        //var rowCount = tbl.rows.length;
        //console.log(rowCount);
        for (var c = 0; c < col.length; c++) {
            for (var i = 0; i < tablenew.rows.length; i++) {

                var tableRow = tablenew.rows[i];
                //console.log(tableRow);
                for (var j = 0; j < tableRow.cells.length; j++) {
                    if (j == col[c]) {
                        tableRow.cells[j].remove();

                    }
                }
            }
        }


        var table1 =
            tableToJson(tbl.get(0)),
            cellWidth = 12,
            rowCount = 0,
            cellContents,
            leftMargin = 2,
            topMargin = 12,
            topMarginTable = 55,
            headerRowHeight = 13,
            rowHeight = 9,

            l = {
                orientation: 'l',
                unit: 'mm',
                format: 'a4',
                compress: true,
                fontSize: 8,
                lineHeight: 1,
                autoSize: false,
                printHeaders: true
            };
        var doc = new jsPDF(l, '', '', '');
        doc.page = 1; // use this as a counter.

        function footer() {
            doc.text(150, 285, 'page ' + doc.page); //print number bottom right

            doc.page++;
        };

        doc.setProperties({
            title: 'Invoice Bill Report',
            subject: 'This is the subject',
            author: 'author',
            keywords: 'generated, javascript, web 2.0, ajax',
            creator: 'author'
        });

        doc.cellInitialize();

        $.each(table1, function (i, row) {

            rowCount++;

            $.each(row, function (j, cellContent) {

                if (rowCount == 1) {
                    doc.margins = 1;
                    doc.setFont("helvetica");
                    doc.setFontType("bold");
                    doc.setFontSize(9);

                    doc.cell(leftMargin, topMargin, cellWidth, headerRowHeight, cellContent, i)
                }
                else if (rowCount == 2) {
                    doc.margins = 1;
                    doc.setFont("times");
                    doc.setFontType("Times New Roman");  // or for normal font type use ------ doc.setFontType("normal");
                    doc.setFontSize(8.5);

                    doc.cell(leftMargin, topMargin, cellWidth, rowHeight, cellContent, i);
                }
                else {

                    doc.margins = 1;
                    doc.setFont("courier ");
                    doc.setFontType("Times New Roman ");
                    doc.setFontSize(8.5);

                    doc.cell(leftMargin, topMargin, cellWidth, rowHeight, cellContent, i);  // 1st=left margin    2nd parameter=top margin,     3rd=row cell width      4th=Row height
                }
            })
        })

        doc.text(150, 285, 'page ' + doc.page); //print number bottom right
        doc.setFontSize(25);
        doc.setFillColor('#DCDCDC');
        doc.rect(1, 0, 400, 10, "F");
        doc.setTextColor(0, 0, 0);
        doc.text(110, 8, "Invoice Bill Report");
        doc.page++;
        doc.save('Invoice Bill Report.pdf');

    });


    function tableToJson(table) {
        var data = [];

        // first row needs to be headers
        var headers = [];
        for (var i = 0; i < table.rows[0].cells.length; i++) {
            headers[i] = table.rows[0].cells[i].innerHTML.toLowerCase().replace(/ /gi, '');
        }


        // go through cells
        for (var i = 0; i < table.rows.length; i++) {

            var tableRow = table.rows[i];
            var rowData = {};

            for (var j = 0; j < tableRow.cells.length; j++) {

                rowData[headers[j]] = tableRow.cells[j].textContent.trim() == "" ? "-" : tableRow.cells[j].textContent.trim();

            }

            data.push(rowData);
        }

        return data;
    }

                    //// createPDF--------------
                    //function createPDF() {
                    //    var sTable = document.getElementById('data-table').innerHTML;

                    //    var style = "<style>";
                    //    style = style + "table {width: 100%;font: 17px Calibri;}";
                    //    style = style + "table, th, td {border: solid 1px #DDD; border-collapse: collapse;";
                    //    style = style + "padding: 2px 3px;text-align: center;}";
                    //    style = style + "</style>";

                    //    // CREATE A WINDOW OBJECT.
                    //    var win = window.open('', '', 'height=700,width=700');

                    //    win.document.write('<html><head>');
                    //    win.document.write('<title>Invoice GST Report</title>');   // <title> FOR PDF HEADER.
                    //    win.document.write(style);          // ADD STYLE INSIDE THE HEAD TAG.
                    //    win.document.write('</head>');
                    //    win.document.write('<body>');
                    //    win.document.write(sTable);         // THE TABLE CONTENTS INSIDE THE BODY TAG.
                    //    win.document.write('</body></html>');

                    //    win.document.close(); // CLOSE THE CURRENT WINDOW.

                    //    win.print();    // PRINT THE CONTENTS.
                    //}
</script>



